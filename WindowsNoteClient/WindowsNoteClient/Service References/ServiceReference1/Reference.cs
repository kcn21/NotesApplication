//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsNoteClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Note", Namespace="http://schemas.datacontract.org/2004/07/NoteLibrary")]
    [System.SerializableAttribute()]
    public partial class Note : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NoteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteTitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteContent {
            get {
                return this.NoteContentField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteContentField, value) != true)) {
                    this.NoteContentField = value;
                    this.RaisePropertyChanged("NoteContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoteId {
            get {
                return this.NoteIdField;
            }
            set {
                if ((this.NoteIdField.Equals(value) != true)) {
                    this.NoteIdField = value;
                    this.RaisePropertyChanged("NoteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteTitle {
            get {
                return this.NoteTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteTitleField, value) != true)) {
                    this.NoteTitleField = value;
                    this.RaisePropertyChanged("NoteTitle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.INoteService")]
    public interface INoteService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoteService/GetNotes", ReplyAction="http://tempuri.org/INoteService/GetNotesResponse")]
        System.Data.DataSet GetNotes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoteService/GetNotes", ReplyAction="http://tempuri.org/INoteService/GetNotesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetNotesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoteService/Getnote", ReplyAction="http://tempuri.org/INoteService/GetnoteResponse")]
        WindowsNoteClient.ServiceReference1.Note Getnote(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoteService/Getnote", ReplyAction="http://tempuri.org/INoteService/GetnoteResponse")]
        System.Threading.Tasks.Task<WindowsNoteClient.ServiceReference1.Note> GetnoteAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INoteServiceChannel : WindowsNoteClient.ServiceReference1.INoteService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NoteServiceClient : System.ServiceModel.ClientBase<WindowsNoteClient.ServiceReference1.INoteService>, WindowsNoteClient.ServiceReference1.INoteService {
        
        public NoteServiceClient() {
        }
        
        public NoteServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NoteServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NoteServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NoteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetNotes() {
            return base.Channel.GetNotes();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetNotesAsync() {
            return base.Channel.GetNotesAsync();
        }
        
        public WindowsNoteClient.ServiceReference1.Note Getnote(int id) {
            return base.Channel.Getnote(id);
        }
        
        public System.Threading.Tasks.Task<WindowsNoteClient.ServiceReference1.Note> GetnoteAsync(int id) {
            return base.Channel.GetnoteAsync(id);
        }
    }
}
